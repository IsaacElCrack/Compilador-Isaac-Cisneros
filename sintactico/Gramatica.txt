P  -> {>} VARIABLES ESTATUTOS {<}
VARIABLES -> {{ DECLARACION }} VARIABLES
VARIABLES ->  ‘‘
DECLARACION -> { LISTA :: } TIPO ; DECLARACION
DECLARACION ->  ‘‘
TIPO -> integer
TIPO -> decimal
TIPO -> string
TIPO -> log
TIPO -> list
LISTA -> identificador LISTAPRIMA
LISTAPRIMA -> ; LISTA
LISTAPRIMA ->  ε
ESTATUTOS -> ESTATUTO , ESTATUTOS
ESTATUTOS ->  ε
ESTATUTO -> if BOOLEXP {>} ESTATUTOS {<} ELSE
ELSE -> elseif BOOLEXP {>} ESTATUTOS {<} ELSE
ELSE -> else {>} ESTATUTOS {<}
ELSE ->  ε
ESTATUTO -> for [ identificador into RANGE ] {>} ESTATUTOS {<}
RANGE -> range [ numero , numero , numero ]
ESTATUTO -> cycle [ identificador = numero ; BOOLEXP ; identificador SIGNO ] {>} ESTATUTOS {<}
RANGE -> range [ numero, numero, numero ]
SIGNO -> ++
SIGNO -> --
ESTATUTO -> do BOOLEXP cycle while {>} ESTATUTOS {<}
ESTATUTO -> while BOOLEXP {>} ESTATUTOS {<}
ESTATUTO -> repeating {>} ESTATUTOS {<} BOOLEXP
ESTATUTO -> FUNCIONES_ESPECIFICAS
ESTATUTO -> ASIGNACION
FUNCIONES_ESPECIFICAS -> printing ( identificador )
FUNCIONES_ESPECIFICAS -> reading ( identificador )
FUNCIONES_ESPECIFICAS -> factorial ( identificador )
FUNCIONES_ESPECIFICAS -> power ( identificador )
FUNCIONES_ESPECIFICAS -> minimal ( LISTA )
FUNCIONES_ESPECIFICAS -> maximal ( LISTA )
FUNCIONES_ESPECIFICAS -> add ( LISTA )
FUNCIONES_ESPECIFICAS -> break
ASIGNACION -> identificador := EXPARITM
BOOLEXP -> BOOLTERM BOOLEXPP
BOOLEXPP -> OR BOOLTERM BOOLEXPP
BOOLEXPP ->  ε
BOOLTERM -> BOOLFACTOR BOOLTERMP
BOOLTERMP -> AND BOOLFACTOR BOOLTERMP
BOOLTERMP ->  ε
BOOLFACTOR -> NOT BOOLFACTOR
BOOLFACTOR -> ( RELTERM RELTERMP )
BOOLFACTOR -> RELTERM RELTERMP
RELTERMP-> OPERADOR RELTERM
RELTERMP->  ε
RELTERM -> EXPARITM
EXPARITM -> TERMINO EXPPRIMA
EXPPRIMA -> /+\ TERMINO EXPPRIMA
EXPPRIMA -> /-\ TERMINO EXPPRIMA
EXPPRIMA ->  ε
TERMINO -> FACTOR TERMPRIMO
TERMPRIMO -> /*\ FACTOR TERMPRIMO
TERMPRIMO -> // FACTOR TERMPRIMO
TERMPRIMO ->  ε
FACTOR -> identificador
FACTOR -> numero
OPERADOR -> <\<
OPERADOR -> >\>:
OPERADOR -> <\<=
OPERADOR -> >\>=
OPERADOR -> \=
OPERADOR -> !=!
OR -> or
AND -> and
NOT -> not